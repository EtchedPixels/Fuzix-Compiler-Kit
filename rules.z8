# Branches
	jr %1
%1:
=
%1:

	jr %2
%1:
%2:
=
%1:
%2:

	jr L%1
	jr L%2
=
	jr L%1

# Fold up clears implied in helpers
	call __lstref0c
	clr r2
=
	call __lstref0c

	call __lstref0
	clr r2
=
	call __lstref0

	call __nref_1
	.word %1
	clr r2
=
	call __nref_1
	.word %1

# A common pattern we rewrite into a helper: we should fix this in the
# backend however FIXME
	ld 14,r2
	ld r15,r3
	call __load2
=
	call __load2ac

# Another common pattern, get a local arg and assign to it
	call __garg12r2
	lde @rr2, r12
	incw rr2
	lde @rr2, r13
=
	call __garg12r2str

# Fold up nref and push for size 2 (usually pointers)
	call @nref_2
	.word %1
	push r3
	push r2
=
	call __pnref_2
	.word %1

# Shorten common functions as register calls

	call __gargr2
=
	call @gargr2

	call __pargr2
=
	call @pargr2

	call __pushln
=
	call @pushln

	call __cceq
=
	call @cceq

	call __ccne
=
	call @ccne

	call __nref_2
=
	call @nref_2

	call __nstore_2b
=
	call @nstore_2b

	call __nstore_2_0
=
	call @nstore_2_0

	call __nstore_2
=
	call @nstore_2

	call __load2
=
	call @load2

	call __garg12r2
=
	call @garg12r2

	call __store2
=
	call @store2

	call __nref12_2
=
	call @nref12_2
